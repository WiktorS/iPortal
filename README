iPortal
=======

iPortal jest przeglądarką dla WMS pracującą przez przeglądarkę internetową. Obsługa mapy zrealizowana jest w OpenLayers,
natomiast całość oparta na PlayFramework 1.2 w Javie.

W tym momencie apliakcja skonfigurowana jest do pracy z pamięciową bazą danych H2, a inicjalne dane zapisane są w pliku
"initial-layers.yml". Warstwy WMS podzielone są ze względu na źródła danych (dostawcę WMS), potem na poszczególne WMS
i w końcu na warstwy. W ten sposób powstaje trójpoziomowa hierarchia danych.

Do uruchomienia aplikacji wystarczy Java oraz framework Play, z którym będzie można skompilować źródła. Uruchomienie
w trybie developerskim odbywa się - jak zwykle w PlayFramework - przez komendę "play run". Aby uruchomić jako oddzielny
proces: "play start". Zatrzymanie procesu to "play stop". Jeśli potrzebne jest przekierowanie portu 9000 (domyślny port
aplikacji) przez bramowy serwer HTTP (np. Apache), wówczas należy także zresetować serwer po uruchomieniu procesu
aplikacji. Szczegóły konfiguracji znaleźć można pod adresem http://www.playframework.org/documentation/1.2.5/production.

W pliku "application.conf" zebrana jest konfiguracja programu:

# Application views configuration
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
views.use_application_arms = false // użycie logo klienta w prawym górnym rogu

# Map configuration
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
map.bounding_box.left = 130000 // granice zakresu mapy w  układzie PL 1992
map.bounding_box.bottom = 120000
map.bounding_box.right = 980000
map.bounding_box.top = 780000
map.resolutions = [1600,800,400,200,100,50,25,13,6,3,2,1,0.5,0.25] // dostępne rozdzielczości
map.initial.cartographer_x_coordinate = 620000 // początkowe położenie mapy
map.initial.cartographer_y_coordinate = 245000
map.initial.z = 4 // początkowe przybliżenie mapy
url.slash_replacement = -.. // wyrażenie zastępujące slash w transmisji URL podczas żądania getCapabilities


Aby skompilować Twitter Bootstrap, należy postąpić tak jak na http://twitter.github.com/bootstrap/less.html#compiling.
Należy wybrać sekcję "Node with makefile" i postępować zgodnie z instrukcją. Dodatkowo ze strony
http://bootswatch.com/cyborg/ pobieramy pliki LESS i wkładamy do katalogu less/ ściągniętych źródeł Bootstrapa.
Następnie modyfikujemy plik variables.less i ustawiamy:
@textColor: @white;
@iconSpritePath:          "../images/glyphicons-halflings.png";
@iconWhiteSpritePath:     "../images/glyphicons-halflings-white.png";
Modyfikacja pliku forms.less (ustawiony color: @black):
// Shared size and type resets
select,
(...)
.uneditable-input {
(...)
  color: @black;
}
Na końcu pliku bootstrap.less należy dołożyć import pliku bootswatch.less:
@import "bootswatch.less";
Całość kompilujemy przy pomocy komendy:
make bootstrap
W rezultacie powstaje katalog bootstrap, z którego należy pobrać plik bootstrap.css i podmienić z aktualnym.


Pozdrowienia,

HubertS
